/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package paquete;

import Conexion.ConexionDB;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Calendar;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Usuario
 */
public class SalasUsu extends javax.swing.JPanel {

    /**
     * Creates new form SalasAdmins
     */
    private int documento;
    public SalasUsu() {
        DefaultTableModel model = new DefaultTableModel();
        initComponents();
        Consulta();
    }

    SalasUsu(int documento) {
        this.documento = documento;
        DefaultTableModel model = new DefaultTableModel();
        initComponents();
        Consulta();
    }

    /** 
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Fecha = new com.toedter.calendar.JDateChooser();
        jScrollPane1 = new javax.swing.JScrollPane();
        panelRound1 = new Clases.PanelRound();
        jScrollPane2 = new javax.swing.JScrollPane();
        Tabla = new javax.swing.JTable();
        Guar = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        TexMate = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        TexHard = new javax.swing.JLabel();
        Hora = new javax.swing.JComboBox<>();

        setMinimumSize(new java.awt.Dimension(450, 430));
        setPreferredSize(new java.awt.Dimension(490, 430));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        Fecha.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                FechaPropertyChange(evt);
            }
        });
        add(Fecha, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 10, 130, -1));

        panelRound1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        Tabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Ubicacion", "Calificacion"
            }
        ));
        Tabla.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TablaMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(Tabla);

        panelRound1.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 250, 350));

        jScrollPane1.setViewportView(panelRound1);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 260, 360));

        Guar.setText("Aceptar");
        Guar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                GuarMouseClicked(evt);
            }
        });
        add(Guar, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 70, 130, -1));

        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        TexMate.setText("Materiales:");
        TexMate.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        jScrollPane3.setViewportView(TexMate);

        jPanel1.add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 130, 130));

        TexHard.setText("Hardware:");
        TexHard.setToolTipText("");
        TexHard.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        jScrollPane4.setViewportView(TexHard);

        jPanel1.add(jScrollPane4, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 130, 130, 140));

        add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 100, 130, 270));

        Hora.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Hora", "06:00", "07:00", "08:00", "09:00", "10:00", "11:00", "12:00", "13:00", "14:00", "15:00", "16:00", "17:00", "18:00" }));
        add(Hora, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 40, 130, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void GuarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_GuarMouseClicked
        Date fech = Fecha.getDate();
        long fechas = fech.getTime();
        java.sql.Date FechaSql = new java.sql.Date(fechas);

        String Horas = (String) Hora.getSelectedItem();
        int filaSeleccionada = Tabla.getSelectedRow();

        if (Horas == null || Horas.equals("Hora") || filaSeleccionada == -1) {
            JOptionPane.showMessageDialog(null, "Debe seleccionar una hora válida y una sala.");
            return;
        }

        String ubicacionSala = Tabla.getValueAt(filaSeleccionada, 0).toString();

        String sqlCheck = "SELECT * FROM Reservas WHERE Ubi_sala = ? AND Fecha_reserva = ? AND Hora_reserva = ? AND Estado != 'Cancelado'";
        String sqlInsert = "INSERT INTO Reservas (Ubi_sala, Fecha_reserva, Hora_reserva, Documento_usu, Estado) VALUES (?, ?, ?, ?, 'Espera')";

        try (Connection conn = ConexionDB.obtenerConexion();
             PreparedStatement pstmtCheck = conn.prepareStatement(sqlCheck);
             PreparedStatement pstmtInsert = conn.prepareStatement(sqlInsert)) {

            // Verifica si ya existe una reserva para esa sala, fecha y hora (que no esté cancelada)
            pstmtCheck.setString(1, ubicacionSala);
            pstmtCheck.setDate(2, FechaSql);
            pstmtCheck.setString(3, Horas);
            ResultSet rs = pstmtCheck.executeQuery();

            if (rs.next()) {
                JOptionPane.showMessageDialog(this, "Ya existe una reserva activa para esa sala, fecha y hora.");
                return;
            }

            // Si no hay reserva, procede a insertar
            pstmtInsert.setString(1, ubicacionSala);
            pstmtInsert.setDate(2, FechaSql);
            pstmtInsert.setString(3, Horas);
            pstmtInsert.setInt(4, documento);

            int filasInsertadas = pstmtInsert.executeUpdate();

            if (filasInsertadas > 0) {
                JOptionPane.showMessageDialog(this, "La reserva fue registrada exitosamente");
            } else {
                JOptionPane.showMessageDialog(this, "No se pudo registrar la reserva");
            }

        } catch (SQLException ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(this, "Error de base de datos: " + ex.getMessage());
        }
    }//GEN-LAST:event_GuarMouseClicked

    private void TablaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TablaMouseClicked
    int filaSeleccionada = Tabla.getSelectedRow();
    if (filaSeleccionada != -1) {
        String ubicacion = Tabla.getValueAt(filaSeleccionada, 0).toString();
        cargarHardwareSala(ubicacion);
        cargarMaterialesSala(ubicacion);
    }
    }//GEN-LAST:event_TablaMouseClicked

    private void FechaPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_FechaPropertyChange

    }//GEN-LAST:event_FechaPropertyChange


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.toedter.calendar.JDateChooser Fecha;
    private javax.swing.JButton Guar;
    private javax.swing.JComboBox<String> Hora;
    private javax.swing.JTable Tabla;
    private javax.swing.JLabel TexHard;
    private javax.swing.JLabel TexMate;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private Clases.PanelRound panelRound1;
    // End of variables declaration//GEN-END:variables

    

    
    private void Consulta() {
        String sql = "SELECT S.Ubicacion, AVG(C.Calificacion) AS Promedio " +
                 "FROM Sala S " +
                 "LEFT JOIN Comentario C ON S.Ubicacion = C.Ubi_sala " +
                 "GROUP BY S.Ubicacion";

    try {
        Connection conn = ConexionDB.obtenerConexion();
        PreparedStatement pstmt = conn.prepareStatement(sql);
        ResultSet rs = pstmt.executeQuery();

        DefaultTableModel modelo = new DefaultTableModel();
        modelo.addColumn("Ubicación");
        modelo.addColumn("Promedio");

        while (rs.next()) {
            Object[] fila = new Object[2];
            fila[0] = rs.getString("Ubicacion");

            double promedio = rs.getDouble("Promedio");
            if (rs.wasNull()) {
                fila[1] = "N/A"; // Sin calificación
            } else {
                fila[1] = promedio;
            }

            modelo.addRow(fila);
        }

        Tabla.setModel(modelo);

        rs.close();
        pstmt.close();
        conn.close();
    } catch (Exception e) {
        JOptionPane.showMessageDialog(null, "Error al consultar: " + e.getMessage());
    }
    }
    
    private void cargarHardwareSala(String ubicacionSala) {
    String sql = "SELECT Hardware FROM Sala WHERE Ubicacion = ?";

    try (Connection conn = ConexionDB.obtenerConexion();
         PreparedStatement pstmt = conn.prepareStatement(sql)) {

        pstmt.setString(1, ubicacionSala);
        ResultSet rs = pstmt.executeQuery();

        if (rs.next()) {
            String hardware = rs.getString("Hardware");

            // Dividir en palabras 
            //\\s+ divide el texto en donde haya uno o más espacios o tabulaciones o saltos de línea.
            String[] palabras = hardware.split("\\s+");
            //<html> permite editar el texto 
            StringBuilder sb = new StringBuilder("<html>Hardware:<br>");

            int contador = 0;
            for (String palabra : palabras) {
                sb.append(palabra).append(" ");
                contador++;
                //cantidad de palabras que podria mostrar antes de un salto de linea
                if (contador % 5 == 0) {
                    sb.append("<br>");
                }
            }

            sb.append("</html>");
            TexHard.setText(sb.toString());
        } else {
            TexHard.setText("No se encontró hardware para esta sala.");
        }

        rs.close();
    } catch (SQLException ex) {
        ex.printStackTrace();
        TexHard.setText("Error al consultar hardware.");
    }
    }
    
    private void cargarMaterialesSala(String ubicacionSala) {
    String sql = "SELECT M.Nombre FROM MaterialSala MS " +
                 "JOIN Materiales M ON MS.ID_material = M.ID " +
                 "WHERE MS.Ubi_sala = ?";

    try (Connection conn = ConexionDB.obtenerConexion();
         PreparedStatement pstmt = conn.prepareStatement(sql)) {

        pstmt.setString(1, ubicacionSala);
        ResultSet rs = pstmt.executeQuery();

        StringBuilder sb = new StringBuilder("<html><b>Materiales:</b><br>");
        int contador = 0;

        while (rs.next()) {
            String nombre = rs.getString("Nombre");
            sb.append(nombre).append(", ");
            contador++;

            // Salto de línea cada 10 materiales
            if (contador % 1 == 0) {
                sb.append("<br>");
            }
        }

        if (contador == 0) {
            sb.append("No hay materiales registrados para esta sala.");
        }

        sb.append("</html>");
        TexMate.setText(sb.toString());

        rs.close();
    } catch (SQLException ex) {
        ex.printStackTrace();
        TexMate.setText("Error al consultar materiales.");
    }
    }  
    
}
